{"version":3,"file":"decorator.js","sourceRoot":"","sources":["../src/lib/decorator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;AAGF,OAAO,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAuBhD,MAAM,mBAAmB,GAAG,CAAC,KAAmC,EAAE,EAAE;IAChE,sEAAsE;IACtE,wDAAwD;IACxD,kDAAkD;IAClD,0EAA0E;IAC1E,+BAA+B;IAC/B,kCAAkC;IAClC,OAAO,kBAAkB,CAAC,KAAY,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,CAAC,UAA2B,EAAE,EAAE;IAC1D,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC;IACtC,OAAO;QACH,IAAI;QACJ,QAAQ;QACR,oEAAoE;QACpE,QAAQ,CAAC,KAAmC;YACxC,OAAO,kBAAkB,CAAC,KAAY,CAAC,CAAC;QAC5C,CAAC;KACJ,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,CAC9B,iBAAiE,EACnE,EAAE,CACA,OAAO,iBAAiB,KAAK,UAAU;IACnC,CAAC,CAAC,mBAAmB,CAAC,iBAAiB,CAAC;IACxC,CAAC,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { UpdatingElement, Constructor } from 'lit-element';\nimport { MobxReactionUpdate } from './mixin.js';\n\n// Decorator implementation borrowed shamelessly from lit-element:\n// https://github.com/Polymer/lit-element/blob/master/src/lib/decorators.ts#L27\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n    kind: 'class';\n    elements: ClassElement[];\n    finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n    kind: 'field' | 'method';\n    key: PropertyKey;\n    placement: 'static' | 'prototype' | 'own';\n    initializer?: Function;\n    extras?: ClassElement[];\n    finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n    descriptor?: PropertyDescriptor;\n}\n\nconst legacyMobxDecorator = (clazz: Constructor<UpdatingElement>) => {\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<UpdatingElement>` for some reason.\n    // `Constructor<UpdatingElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return MobxReactionUpdate(clazz as any);\n};\n\nconst standardMobxDecorator = (descriptor: ClassDescriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<UpdatingElement>) {\n            return MobxReactionUpdate(clazz as any);\n        },\n    };\n};\n\nexport const mobxReactive = () => (\n    classOrDescriptor: Constructor<UpdatingElement> | ClassDescriptor\n) =>\n    typeof classOrDescriptor === 'function'\n        ? legacyMobxDecorator(classOrDescriptor)\n        : standardMobxDecorator(classOrDescriptor);\n"]}